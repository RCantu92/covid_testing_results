{"ast":null,"code":"var _jsxFileName = \"/Users/robertocantu/blockchain_programming/covid_testing_results/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Input, Message } from 'semantic-ui-react';\nimport covidTesting from '../back-end/covidTesting.js';\nimport web3 from '../back-end/web3.js';\n\nclass CovidTesting extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      govntId: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmitCivillian\", async event => {\n      // Browser from trying to\n      // submit the form\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await covidTesting.methods.isCivillianTested(this.state.govntId).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onSubmitHealthcareProf\", async event => {\n      // Browser from trying to\n      // submit the form\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await covidTesting.methods.isCivillianTested(this.state.govntId).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps() {\n    const contractOwner = await covidTesting.methods.contractOwner().call();\n    const testedCivillian = await covidTesting.methods.isCivillianTested;\n    return {\n      contractOwner,\n      testedCivillian\n    };\n  }\n\n  renderContractOwner() {\n    const items = [{\n      header: 'Contract Owner Address:',\n      description: 'Ethereum address of the owner of the contract.',\n      meta: this.props.contractOwner,\n      fluid: true\n    }];\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderCivillians(govntId) {\n    const items = this.props.testedCivillian(govntId).call();\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), this.renderContractOwner(), __jsx(Form, {\n      onSubmit: this.onSubmitCivillian,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Confirm if civllian has been tested for COVID-19\"), __jsx(Input, {\n      placeholder: \"Search by Government Issued ID\",\n      onChange: event => this.setState({\n        govntId: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error:\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Search\")), this.renderCivillians(int(this.state.govntId)), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Confirm if healthcare professional is qualified to administer COVID-19 tests\"), __jsx(\"input\", {\n      placeholder: \"Search by Healthcare Professional License Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })), __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Search\")));\n  }\n\n}\n\n;\nexport default CovidTesting;","map":{"version":3,"sources":["/Users/robertocantu/blockchain_programming/covid_testing_results/pages/index.js"],"names":["React","Component","Card","Form","Button","Input","Message","covidTesting","web3","CovidTesting","govntId","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","isCivillianTested","state","send","from","err","message","getInitialProps","contractOwner","call","testedCivillian","renderContractOwner","items","header","description","meta","props","fluid","renderCivillians","render","onSubmitCivillian","target","value","int"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Form, Button, Input, Message } from 'semantic-ui-react';\nimport covidTesting from '../back-end/covidTesting.js';\nimport web3 from '../back-end/web3.js';\n\nclass CovidTesting extends Component {\n    state = {\n        govntId: \"\",\n        errorMessage: \"\",\n        loading: false\n    };\n\n    static async getInitialProps() {\n        const contractOwner = await covidTesting.methods.contractOwner().call();\n        const testedCivillian = await covidTesting.methods.isCivillianTested\n\n        return { contractOwner, testedCivillian };\n    }\n\n    renderContractOwner() {\n        const items = [{\n            header: 'Contract Owner Address:',\n            description: 'Ethereum address of the owner of the contract.',\n            meta: this.props.contractOwner,\n            fluid: true\n        }];\n\n        return <Card.Group items={items} />;\n    }\n\n    onSubmitCivillian = async (event) => {\n        // Browser from trying to\n        // submit the form\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: \"\" });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await covidTesting.methods.isCivillianTested(this.state.govntId).send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    onSubmitHealthcareProf = async (event) => {\n        // Browser from trying to\n        // submit the form\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: \"\" });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await covidTesting.methods.isCivillianTested(this.state.govntId).send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    renderCivillians(govntId) {\n        const items = this.props.testedCivillian(govntId).call()\n\n        return <Card.Group items={items} />;\n    }\n\n    render() {\n        return(\n            <div>\n                <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n                {this.renderContractOwner()}\n\n                <Form onSubmit={this.onSubmitCivillian} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                        <label>Confirm if civllian has been tested for COVID-19</label>\n                        <Input\n                        placeholder=\"Search by Government Issued ID\"\n                        onChange={event => this.setState({ govntId: event.target.value })}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Error:\" content={this.state.errorMessage} />\n                    <Button loading={this.state.loading}>Search</Button>\n                </Form>\n                {this.renderCivillians(int(this.state.govntId))}\n\n                <Form>\n                    <Form.Field>\n                        <label>Confirm if healthcare professional is qualified to administer COVID-19 tests</label>\n                        <input placeholder=\"Search by Healthcare Professional License Number\"/>\n                    </Form.Field>\n\n                    <Button>Search</Button>\n                </Form>\n            </div>\n        )\n    };\n};\n\nexport default CovidTesting;"]},"metadata":{},"sourceType":"module"}