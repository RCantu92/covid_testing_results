{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/robertocantu/blockchain_programming/covid_testing_results/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Input, Message, Divider, Grid } from 'semantic-ui-react';\nimport covidTesting from '../back-end/covidTesting.js';\nimport web3 from '../back-end/web3.js';\n\nvar CovidTesting = /*#__PURE__*/function (_Component) {\n  _inherits(CovidTesting, _Component);\n\n  var _super = _createSuper(CovidTesting);\n\n  function CovidTesting() {\n    var _this;\n\n    _classCallCheck(this, CovidTesting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      govntId: '',\n      isCivillianTested: '',\n      civillianEthAddress: '',\n      licenseNum: '',\n      isHealthcareProfQualified: '',\n      healthcareProfEthAddress: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitCivillian\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts, isCivillianTested;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Browser from trying to\n                // submit the form\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                _context.next = 8;\n                return covidTesting.methods.isCivillianTested(_this.state.govntId).call();\n\n              case 8:\n                isCivillianTested = _context.sent;\n\n                _this.setState({\n                  isCivillianTested: isCivillianTested[0]\n                }); // console.log(this.state.isCivillianTested.toString());\n\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 15:\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitHealthcareProf\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, isHealthcareProfQualified;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Browser from trying to\n                // submit the form\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context2.sent;\n                _context2.next = 8;\n                return covidTesting.methods.isHealthcareProfQualified(_this.state.licenseNum).call();\n\n              case 8:\n                isHealthcareProfQualified = _context2.sent;\n\n                _this.setState({\n                  isHealthcareProfQualified: isHealthcareProfQualified\n                });\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context2.t0.message\n                });\n\n              case 15:\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 12]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitAddHealthcareProf\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // Browser from trying to\n                // submit the form\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context3.prev = 2;\n                _context3.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context3.sent;\n                _context3.next = 8;\n                return covidTesting.methods.addHealthcareProfessional(_this.state.healthcareProfEthAddress, _this.state.licenseNum).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context3.t0.message\n                });\n\n              case 13:\n                _this.setState({\n                  loading: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitaddTestedCivillian\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // Browser from trying to\n                // submit the form\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context4.prev = 2;\n                _context4.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context4.sent;\n                console.log(accounts);\n                _context4.next = 9;\n                return covidTesting.methods.addTestedCivillian(_this.state.govntId, _this.state.licenseNum, _this.state.civillianEthAddress).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context4.t0.message\n                });\n\n              case 14:\n                _this.setState({\n                  loading: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 11]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(CovidTesting, [{\n    key: \"renderContractOwner\",\n    // Displays the Ethereum address that\n    // owns the overall contract.\n    value: function renderContractOwner() {\n      var items = [{\n        header: 'Contract Owner Address:',\n        description: 'Ethereum address of the owner of the contract.',\n        meta: this.props.contractOwner,\n        fluid: true\n      }];\n      return __jsx(Card.Group, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"renderForms\",\n    value: function renderForms() {\n      var _this2 = this;\n\n      var items = [{\n        header: __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }, \"Confirm if civllian has been tested for COVID-19\"),\n        description: __jsx(Form, {\n          onSubmit: this.onSubmitCivillian,\n          error: !!this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, __jsx(Form.Field, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }\n        }, __jsx(Input, {\n          placeholder: \"Search civillian by government Issued ID number\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              govntId: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }\n        })), __jsx(Message, {\n          error: true,\n          header: \"Error:\",\n          content: this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }\n        }), __jsx(Button, {\n          type: \"submit\",\n          loading: this.state.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }, \"Search\"), __jsx(Message, {\n          header: \"Searched Civillian COVID Tested: \",\n          content: this.state.isCivillianTested.toString(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }\n        }))\n      }, {\n        header: __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }\n        }, \"Confirm if healthcare professional is qualified for COVID-19 test\"),\n        description: __jsx(Form, {\n          onSubmit: this.onSubmitHealthcareProf,\n          error: !!this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, __jsx(Form.Field, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }\n        }, __jsx(Input, {\n          placeholder: \"Search healthcare professional by license number\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              licenseNum: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }\n        })), __jsx(Message, {\n          error: true,\n          header: \"Error:\",\n          content: this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }), __jsx(Button, {\n          type: \"submit\",\n          loading: this.state.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, \"Search\"), __jsx(Message, {\n          header: \"Searched Healthcare Professional Qualification: \",\n          content: this.state.isHealthcareProfQualified.toString(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }))\n      }, {\n        header: __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        }, \"Add a healthcare professional to be qualified to administer COVID-19 tests\"),\n        description: __jsx(Form, {\n          onSubmit: this.onSubmitAddHealthcareProf,\n          error: !!this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, __jsx(Form.Field, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }, __jsx(Input, {\n          placeholder: \"Add healthcare professional Ethereum address\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              healthcareProfEthAddress: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }\n        }), __jsx(Input, {\n          placeholder: \"Add healthcare professional license number\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              licenseNum: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }\n        })), __jsx(Message, {\n          error: true,\n          header: \"Error:\",\n          content: this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }), __jsx(Button, {\n          type: \"submit\",\n          loading: this.state.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }\n        }, \"Add\"))\n      }, {\n        header: __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }, \"Add a civillian that has had the COVID-19 test\"),\n        description: __jsx(Form, {\n          onSubmit: this.onSubmitaddTestedCivillian,\n          error: !!this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, __jsx(Form.Field, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }\n        }, __jsx(Input, {\n          placeholder: \"Add civillian by government Issued ID number\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              govntId: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }\n        }), __jsx(Input, {\n          placeholder: \"Add license number of healthcare professional administering test\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              licenseNum: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }\n        }), __jsx(Input, {\n          placeholder: \"Add civillian Ethereum address\",\n          onChange: function onChange(event) {\n            return _this2.setState({\n              civillianEthAddress: event.target.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }\n        })), __jsx(Message, {\n          error: true,\n          header: \"Error:\",\n          content: this.state.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }\n        }), __jsx(Button, {\n          type: \"submit\",\n          loading: this.state.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }\n        }, \"Add\"))\n      }];\n      return __jsx(Card.Group, {\n        itemsPerRow: \"2\",\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }), __jsx(Grid, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, __jsx(Grid.Column, {\n        centered: true,\n        width: \"24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, this.renderContractOwner())), __jsx(Divider, {\n        horizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }), __jsx(Grid, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }, __jsx(Grid.Column, {\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, this.renderForms())));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var contractOwner;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return covidTesting.methods.contractOwner().call();\n\n              case 2:\n                contractOwner = _context5.sent;\n                return _context5.abrupt(\"return\", {\n                  contractOwner: contractOwner\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CovidTesting;\n}(Component);\n\n;\nexport default CovidTesting;","map":{"version":3,"sources":["/Users/robertocantu/blockchain_programming/covid_testing_results/pages/index.js"],"names":["React","Component","Card","Form","Button","Input","Message","Divider","Grid","covidTesting","web3","CovidTesting","govntId","isCivillianTested","civillianEthAddress","licenseNum","isHealthcareProfQualified","healthcareProfEthAddress","errorMessage","loading","event","preventDefault","setState","eth","getAccounts","accounts","methods","state","call","message","addHealthcareProfessional","send","from","console","log","addTestedCivillian","items","header","description","meta","props","contractOwner","fluid","onSubmitCivillian","target","value","toString","onSubmitHealthcareProf","onSubmitAddHealthcareProf","onSubmitaddTestedCivillian","renderContractOwner","renderForms"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Form, Button, Input, Message, Divider, Grid } from 'semantic-ui-react';\nimport covidTesting from '../back-end/covidTesting.js';\nimport web3 from '../back-end/web3.js';\n\nclass CovidTesting extends Component {\n    state = {\n        govntId: '',\n        isCivillianTested: '',\n        civillianEthAddress: '',\n        licenseNum: '',\n        isHealthcareProfQualified: '',\n        healthcareProfEthAddress: '',\n        errorMessage: '',\n        loading: false\n    };\n\n    static async getInitialProps() {\n        const contractOwner = await covidTesting.methods.contractOwner().call();\n        \n        return { contractOwner };\n    };\n    \n    // Displays the Ethereum address that\n    // owns the overall contract.\n    renderContractOwner() {\n        const items = [{\n            header: 'Contract Owner Address:',\n            description: 'Ethereum address of the owner of the contract.',\n            meta: this.props.contractOwner,\n            fluid: true\n        }];\n\n        return <Card.Group items={items} />;\n    };\n\n    onSubmitCivillian = async (event) => {\n        // Browser from trying to\n        // submit the form\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            let isCivillianTested = await covidTesting.methods.isCivillianTested(this.state.govntId).call();\n            this.setState({ isCivillianTested: isCivillianTested[0] });\n            // console.log(this.state.isCivillianTested.toString());\n        } catch(err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    onSubmitHealthcareProf = async (event) => {\n        // Browser from trying to\n        // submit the form\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            let isHealthcareProfQualified = await covidTesting.methods.isHealthcareProfQualified(this.state.licenseNum).call();\n            this.setState({ isHealthcareProfQualified: isHealthcareProfQualified });\n        } catch(err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    onSubmitAddHealthcareProf = async (event) => {\n        // Browser from trying to\n        // submit the form\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await covidTesting.methods.addHealthcareProfessional(this.state.healthcareProfEthAddress, this.state.licenseNum).send({ from: accounts[0] });\n        } catch(err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    onSubmitaddTestedCivillian = async (event) => {\n        // Browser from trying to\n        // submit the form\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts);\n            await covidTesting.methods.addTestedCivillian(this.state.govntId, this.state.licenseNum, this.state.civillianEthAddress).send({ from: accounts[0] });\n        } catch(err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    renderForms() {\n        const items = [\n            {\n                header: <h3>Confirm if civllian has been tested for COVID-19</h3>,\n                description: (\n                    <Form onSubmit={this.onSubmitCivillian} error={!!this.state.errorMessage} >\n                        <Form.Field>\n                            <Input\n                            placeholder='Search civillian by government Issued ID number'\n                            onChange={event => this.setState({ govntId: event.target.value })}\n                            />\n                        </Form.Field>\n\n                        <Message error header='Error:' content={this.state.errorMessage} />\n\n                        <Button type='submit' loading={this.state.loading}>Search</Button>\n\n                        <Message header='Searched Civillian COVID Tested: ' content={this.state.isCivillianTested.toString()} />\n                    </Form>\n                )\n            },\n            {\n                header: <h3>Confirm if healthcare professional is qualified for COVID-19 test</h3>,\n                description: (\n                    <Form onSubmit={this.onSubmitHealthcareProf} error={!!this.state.errorMessage} >\n                        <Form.Field>\n                            <Input\n                            placeholder='Search healthcare professional by license number'\n                            onChange={event => this.setState({ licenseNum: event.target.value })}\n                            />\n                        </Form.Field>\n\n                        <Message error header='Error:' content={this.state.errorMessage} />\n\n                        <Button type='submit' loading={this.state.loading}>Search</Button>\n\n                        <Message header='Searched Healthcare Professional Qualification: ' content={this.state.isHealthcareProfQualified.toString()} />\n                    </Form>\n                )\n            },\n            {\n                header: <h3>Add a healthcare professional to be qualified to administer COVID-19 tests</h3>,\n                description: (\n                    <Form onSubmit={this.onSubmitAddHealthcareProf} error={!!this.state.errorMessage} >\n                        <Form.Field>\n                            <Input\n                            placeholder='Add healthcare professional Ethereum address'\n                            onChange={event => this.setState({ healthcareProfEthAddress: event.target.value })}\n                            />\n\n                            <Input\n                            placeholder='Add healthcare professional license number'\n                            onChange={event => this.setState({ licenseNum: event.target.value })}\n                            />\n                        </Form.Field>\n\n                        <Message error header='Error:' content={this.state.errorMessage} />\n\n                        <Button type='submit' loading={this.state.loading}>Add</Button>\n                    </Form>\n                )\n            },\n            {\n                header: <h3>Add a civillian that has had the COVID-19 test</h3>,\n                description: (\n                    <Form onSubmit={this.onSubmitaddTestedCivillian} error={!!this.state.errorMessage} >\n                        <Form.Field>\n                            <Input\n                            placeholder='Add civillian by government Issued ID number'\n                            onChange={event => this.setState({ govntId: event.target.value })}\n                            />\n\n                            <Input\n                            placeholder='Add license number of healthcare professional administering test'\n                            onChange={event => this.setState({ licenseNum: event.target.value })}\n                            />\n\n                            <Input\n                            placeholder='Add civillian Ethereum address'\n                            onChange={event => this.setState({ civillianEthAddress: event.target.value })}\n                            />\n                        </Form.Field>\n\n                        <Message error header='Error:' content={this.state.errorMessage} />\n\n                        <Button type='submit' loading={this.state.loading}>Add</Button>\n                    </Form>\n                )\n            }\n        ];\n\n        return <Card.Group itemsPerRow='2' items={items} />;\n    };\n\n    render() {\n        return(\n            <div>\n                <link rel='stylesheet' href='//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css' />\n                <Grid centered >\n                    <Grid.Column centered width='24'>\n                        {this.renderContractOwner()}\n                    </Grid.Column>\n                </Grid>\n\n                <Divider horizontal></Divider>\n                <Grid centered >\n                    <Grid.Column width='12'>\n                        {this.renderForms()}\n                    </Grid.Column>\n                </Grid>\n            </div>\n        )\n    };\n};\n\nexport default CovidTesting;"]},"metadata":{},"sourceType":"module"}